# Generated by Django 5.2.5 on 2025-09-13 16:38

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BuyerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('company_size', models.CharField(blank=True, help_text='e.g., 1-10, 11-50, 51-200, 200+', max_length=50)),
                ('preferred_categories', models.JSONField(blank=True, default=list, help_text='List of preferred service categories')),
                ('budget_range', models.CharField(blank=True, help_text='e.g., $100-500, $500-1000, $1000+', max_length=50)),
                ('preferred_delivery_time', models.CharField(blank=True, help_text='e.g., 1-3 days, 1 week, 2 weeks+', max_length=50)),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('platform', 'Platform Messages')], default='email', max_length=20)),
                ('notification_preferences', models.JSONField(blank=True, default=dict, help_text='Notification settings')),
                ('is_active', models.BooleanField(default=True)),
                ('auto_save_services', models.BooleanField(default=True, help_text='Automatically save viewed services')),
                ('show_recommendations', models.BooleanField(default=True, help_text='Show personalized recommendations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Buyer Profile',
                'verbose_name_plural': 'Buyer Profiles',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('review', 'In Review'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('disputed', 'Disputed')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('requirements', models.TextField(help_text="Buyer's requirements for the service")),
                ('special_instructions', models.TextField(blank=True, help_text='Additional instructions from buyer')),
                ('expected_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('actual_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('placed_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('buyer_notes', models.TextField(blank=True, help_text='Notes from buyer')),
                ('seller_notes', models.TextField(blank=True, help_text='Notes from seller')),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_placed', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-placed_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('requirement', 'Requirement'), ('deliverable', 'Deliverable'), ('reference', 'Reference'), ('other', 'Other')], default='other', max_length=20)),
                ('file_name', models.CharField(max_length=255)),
                ('file_url', models.URLField()),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='services.order')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_files_uploaded', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_internal', models.BooleanField(default=False, help_text='Internal note not visible to other party')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='services.order')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_messages_sent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(help_text='Review title', max_length=200)),
                ('comment', models.TextField(help_text='Detailed review comment')),
                ('is_verified', models.BooleanField(default=False, help_text='Verified purchase review')),
                ('is_helpful', models.PositiveIntegerField(default=0, help_text='Number of helpful votes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField()),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='services.review')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='SellerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('business_description', models.TextField(blank=True)),
                ('business_website', models.URLField(blank=True)),
                ('business_phone', models.CharField(blank=True, max_length=20)),
                ('business_address', models.TextField(blank=True)),
                ('skills', models.JSONField(blank=True, default=list, help_text='List of skills/expertise')),
                ('experience_years', models.PositiveIntegerField(default=0, help_text='Years of experience')),
                ('education', models.TextField(blank=True)),
                ('certifications', models.JSONField(blank=True, default=list, help_text='List of certifications')),
                ('portfolio_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('behance_url', models.URLField(blank=True)),
                ('response_time', models.PositiveIntegerField(default=24, help_text='Average response time in hours')),
                ('completion_rate', models.DecimalField(decimal_places=2, default=100.0, help_text='Order completion rate percentage', max_digits=5)),
                ('on_time_delivery_rate', models.DecimalField(decimal_places=2, default=100.0, help_text='On-time delivery rate percentage', max_digits=5)),
                ('is_available', models.BooleanField(default=True, help_text='Whether seller is accepting new orders')),
                ('max_orders_per_month', models.PositiveIntegerField(default=10, help_text='Maximum orders per month')),
                ('current_month_orders', models.PositiveIntegerField(default=0, help_text='Current month orders')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seller_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Seller Profile',
                'verbose_name_plural': 'Seller Profiles',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('delivery_time', models.PositiveIntegerField(help_text='Delivery time in days')),
                ('requirements', models.TextField(blank=True, help_text='What the buyer needs to provide')),
                ('features', models.JSONField(blank=True, default=list, help_text='List of features included in the service')),
                ('images', models.JSONField(blank=True, default=list, help_text='List of image URLs')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='services.category')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='review',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='services.service'),
        ),
        migrations.AddField(
            model_name='order',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='services.service'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('order_placed', 'Order Placed'), ('order_confirmed', 'Order Confirmed'), ('order_in_progress', 'Order In Progress'), ('order_completed', 'Order Completed'), ('order_cancelled', 'Order Cancelled'), ('order_message', 'New Order Message'), ('order_file', 'New Order File'), ('review_received', 'New Review Received'), ('service_featured', 'Service Featured'), ('system', 'System Notification')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_email_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='services.order')),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='services.review')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='services.service')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField()),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_images', to='services.service')),
            ],
            options={
                'ordering': ['-is_primary', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='BuyerAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('completed_orders', models.PositiveIntegerField(default=0)),
                ('cancelled_orders', models.PositiveIntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_reviews_given', models.PositiveIntegerField(default=0)),
                ('average_rating_given', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_services_viewed', models.PositiveIntegerField(default=0)),
                ('total_services_saved', models.PositiveIntegerField(default=0)),
                ('favorite_categories', models.JSONField(blank=True, default=list, help_text='Most viewed/saved categories')),
                ('orders_this_month', models.PositiveIntegerField(default=0)),
                ('spent_this_month', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('orders_this_year', models.PositiveIntegerField(default=0)),
                ('spent_this_year', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('last_order_date', models.DateTimeField(blank=True, null=True)),
                ('last_review_date', models.DateTimeField(blank=True, null=True)),
                ('last_login_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Buyer Analytics',
                'unique_together': {('buyer',)},
            },
        ),
        migrations.CreateModel(
            name='BuyerPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_service_types', models.JSONField(blank=True, default=list, help_text='Types of services preferred')),
                ('preferred_seller_level', models.CharField(choices=[('any', 'Any Level'), ('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('expert', 'Expert')], default='any', max_length=20)),
                ('preferred_rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Minimum seller rating preferred', max_digits=3)),
                ('min_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preferred_currency', models.CharField(default='USD', max_length=3)),
                ('language_preference', models.CharField(default='en', help_text='Preferred language for communication', max_length=10)),
                ('timezone', models.CharField(blank=True, max_length=50)),
                ('response_time_preference', models.PositiveIntegerField(default=24, help_text='Preferred seller response time in hours')),
                ('email_notifications', models.BooleanField(default=True)),
                ('order_updates', models.BooleanField(default=True)),
                ('new_services', models.BooleanField(default=True)),
                ('recommendations', models.BooleanField(default=True)),
                ('marketing_emails', models.BooleanField(default=False)),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('sellers_only', 'Sellers Only')], default='public', max_length=20)),
                ('show_order_history', models.BooleanField(default=True)),
                ('show_reviews', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Buyer Preferences',
                'unique_together': {('buyer',)},
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpful',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_helpful', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to='services.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('review', 'user')},
            },
        ),
        migrations.CreateModel(
            name='SellerAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_services', models.PositiveIntegerField(default=0)),
                ('active_services', models.PositiveIntegerField(default=0)),
                ('featured_services', models.PositiveIntegerField(default=0)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('completed_orders', models.PositiveIntegerField(default=0)),
                ('cancelled_orders', models.PositiveIntegerField(default=0)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('five_star_reviews', models.PositiveIntegerField(default=0)),
                ('four_star_reviews', models.PositiveIntegerField(default=0)),
                ('three_star_reviews', models.PositiveIntegerField(default=0)),
                ('two_star_reviews', models.PositiveIntegerField(default=0)),
                ('one_star_reviews', models.PositiveIntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_platform_fees', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('net_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('paid_out_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('pending_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('orders_this_month', models.PositiveIntegerField(default=0)),
                ('earnings_this_month', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('orders_this_year', models.PositiveIntegerField(default=0)),
                ('earnings_this_year', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Seller Analytics',
                'unique_together': {('seller',)},
            },
        ),
        migrations.CreateModel(
            name='SellerEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_amount', models.DecimalField(decimal_places=2, help_text='Total order amount', max_digits=10)),
                ('platform_fee', models.DecimalField(decimal_places=2, help_text='Platform commission', max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, help_text='Amount after platform fee', max_digits=10)),
                ('is_paid_out', models.BooleanField(default=False, help_text='Whether earnings have been paid out')),
                ('paid_out_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='services.order')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('seller', 'order')},
            },
        ),
        migrations.CreateModel(
            name='SavedService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, help_text='Personal notes about the service')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_services', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='services.service')),
            ],
            options={
                'ordering': ['-saved_at'],
                'unique_together': {('buyer', 'service')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('service', 'buyer')},
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Recommendation score (0-1)')),
                ('reason', models.CharField(help_text='Reason for recommendation', max_length=200)),
                ('is_viewed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='services.service')),
            ],
            options={
                'ordering': ['-score', '-created_at'],
                'unique_together': {('user', 'service')},
            },
        ),
    ]
